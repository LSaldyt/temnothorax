#!/usr/bin/env python3
import sys, time
from pprint import pprint
from collections import defaultdict

from ant        import Ant
from plot       import plot
from states     import states
from update     import update
from display    import display
from parameters import parameters

def main(args):
    history = []
    N = 100
    ants = [Ant('exploration', 'at-nest', 0, None, i) for i in range(N)]
    leaders = defaultdict(dict)

    print('Starting ants:')
    pprint(ants)
    nestCounts  = [0] * (parameters['__nest_count__'] + 1)
    stateCounts = {state : {substate : 0 for substate in stateDict} 
                   for state, stateDict in states.items()}
    ants = [update(states, parameters, ant) for ant in ants]
    for ant in ants:
        stateCounts[ant.state][ant.substate] += 1
        nestCounts[ant.current] += 1
    pprint(stateCounts)

    step = 0
    try:
        while True:
            stateCounts = {state : {substate : 0 for substate in stateDict} 
                           for state, stateDict in states.items()}
            nestCounts  = [0] * (parameters['__nest_count__'] + 1)
            ants = [update(states, parameters, ant) for ant in ants]
            for ant in ants:
                stateCounts[ant.state][ant.substate] += 1
                nestCounts[ant.current] += 1
                if ant.substate == 'lead-forward':
                    leaders[ant.current][ant.i] = ant
            history.append((stateCounts, nestCounts))
            ##if step % 10 == 0:
            #    #pprint(stateCounts)
            #    #pprint(nestCounts)
            step += 1
            if step == 100:
                break

    except KeyboardInterrupt:
        print('Ran {} steps'.format(step))

    plot(history)

if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))

